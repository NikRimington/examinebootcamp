@using System.Security.Policy
@using Examine.LuceneEngine.SearchCriteria
@using Examine.Providers
@using Examine.SearchCriteria
@using ExamineBootcamp.BusinessLogic.Helper
@using Umbraco.Web
@using UmbracoExamine
@inherits umbraco.MacroEngines.DynamicNodeContext

@helper RenderResults(ISearchResults results,UmbracoHelper umbraco)
{
    <ul>
        @foreach (var result in results)
        {
            var node = umbraco.TypedContent(result.Id);
            <li>
                <a href="@node.Url">@node.Name</a>
                <br/>Relevance - (@result.Score)<br/>
                Date created - @node.CreateDate
            </li>
        }
    </ul>
}

@{
    BaseSearchProvider _searcher = ExamineManager.Instance.SearchProviderCollection["ExternalSearcher"];

    string fieldToSearch = "contents";
    string HideFromNavigation = "umbracoNaviHide";

    var criteria = _searcher.CreateSearchCriteria(IndexTypes.Content);

    var searchTerm = string.Empty;

    searchTerm = string.IsNullOrEmpty(Request["query"]) ? string.Empty : Request["query"];
    searchTerm = searchTerm.MakeSearchQuerySafe();
    if (searchTerm == string.Empty)
    {
        <p>Enter search term</p>
    }
    else
    {
        var umbraco = new UmbracoHelper(UmbracoContext.Current);
        var siteRootId = Current.Parent.Id;
        var examineQuery = criteria.Field("SearchablePath", siteRootId.ToString());
        examineQuery.Not().Field(HideFromNavigation, 1.ToString());

        if (searchTerm.Contains(" "))
        {
            string[] terms = searchTerm.Split(' ');
            examineQuery.And().GroupedOr(new List<string> { fieldToSearch }, terms);
        }
        else
        {
            examineQuery.And().Field(fieldToSearch,searchTerm.MultipleCharacterWildcard());
        }

        examineQuery.And().OrderByDescending("createDate");

        var results = _searcher.Search(examineQuery.Compile());
        <p>@criteria.ToString()</p>
        if (results.Any())
        {
            <p>You search for ""<strong>@searchTerm</strong>" found @results.Count() results</p>
            @RenderResults(results, umbraco)
        }
        else
        {
            <p>No results found for query @searchTerm</p>
        }
    }
}

